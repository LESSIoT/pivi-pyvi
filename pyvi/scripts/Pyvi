#! /usr/bin/env python

import Queue
import signal
import sys
import time

from pyvi import SerialTransport
from pyvi import TestTransport
from pyvi import UdpTransport
from pyvi import ThreadSerial
from pyvi import ThreadUdp

from utils import Configuration
from utils import logs


def sig_handler(signum, frame):
    pyvi_logger.info('Signal handler stopping the program')
    serial.kill()
    udp.kill()
    serial.join()
    udp.join()
    lr = logs.LogReader(conf_file)
    lr.send_mail('Signal handler stopping the program')
    sys.exit(0)

if len(sys.argv) == 2:
    conf_file = sys.argv[1]
else:
    conf_file = '/etc/pivi.cfg'

conf = Configuration(conf_file=conf_file)
pyvi_logger = logs.get_logger('Pyvi', conf_file=conf_file)

try:
    if conf.is_virtual():
        serial_transport = TestTransport(auto_gen=True)
    else:
        serial_transport = SerialTransport()
        serial_transport.open(conf.serial_port())

    pivi_id = int(conf.pivi_id())
    udp_transport = UdpTransport()
    udp_transport.open(conf.server_uri())
except:
    pyvi_logger.exception("Exception while creating the transports.")
    lr = logs.LogReader(conf_file)
    lr.send_mail("Exception while creating the transports.")
    raise

measurements = Queue.Queue(maxsize=100)

serial = ThreadSerial(conf_file, serial_transport, measurements)
serial.daemon = True
udp = ThreadUdp(conf_file, udp_transport, pivi_id, measurements)
udp.daemon = True

signal.signal(signal.SIGINT, sig_handler)
signal.signal(signal.SIGTERM, sig_handler)

pyvi_logger.info('Pyvi threads about to start.')
serial.start()

udp.start()

while (True):
    time.sleep(10)

# vim: set ft=python:
